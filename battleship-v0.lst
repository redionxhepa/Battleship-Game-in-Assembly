battleship-v0                                                                                                           PAGE 1
                         1     ; ;:-* 8052 BattleShip *-:; ;
                         2     ; EEE212 - Section 4 - Group 9 ;
                         3     ;=========================================================
                         4     ; ;;RAM MAP;; ;
                         5     ;
                         6     ;
                         7
                         8     ;=========================================================
                         9     ; ;;VARIABLES;; ;
                        10
                        11      ;Bits
  007F                  12      P1_P2 BIT 7FH ;0 for P1, 1 for P2
  007E                  13      RADAR BIT 7EH ;Radar mode indicator when updating LCD pages
  007D                  14      FILLER_SHORTCUT BIT 7DH
                        15
                        16      ;Bytes
  0030                  17      MAP_NO        EQU 30H ;AKA: MAP_ID, SCREEN_ID, etc. -
                        18                       ; 1 for P1 Map, 2 for P2 Map, 3 for Text Screen
  0031                  19      TILE_ROW      EQU 31H
  0032                  20      TILE_COL      EQU 32H
  0033                  21      TILE_ID       EQU 33H ;Use R's? ***
                        22
  0007                  23      CTR_I         EQU 07H
  0006                  24      CTR_II        EQU 06H
  0005                  25      CTR_III       EQU 05H
                        26
  0034                  27      INPUT_I       EQU 34H
  0035                  28      INPUT_II      EQU 35H
                        29
  0037                  30      P1_SHIPS_LEFT EQU 37H
  0038                  31      P2_SHIPS_LEFT EQU 38H
                        32
  0039                  33      LCD_COUNTER   EQU 39H
                        34
  00A4                  35      eeprom_scl_pin  EQU P2.4  ;scl p2.4    a4h
  00A5                  36      eeprom_sda_pin  EQU P2.5  ;sda p2.5    a5h
  003A                  37      memory_address1 EQU 3AH
  003B                  38      eeprom_data     EQU 3BH
  003C                  39      eeprom_page_no  EQU 3CH
  003D                  40      EEProm_BUFF     EQU 3DH
                        41
                        42      ;Locations
  0040                  43      P1_MAP_START  EQU 40H
  007F                  44      P1_MAP_END    EQU 7FH
                        45
  0080                  46      P2_MAP_START  EQU 80H
  00BF                  47      P2_MAP_END    EQU 0BFH
                        48
  00C0                  49      TEXT_SCR_MAP_START    EQU 0C0H ; AKA: INFO_SCR
  00FF                  50      TEXT_SCR_MAP_END      EQU 0FFH
                        51
                        52      ;MAP_TABLE_START
                        53      ;LETTER_TILES
                        54
                        55     ;=========================================================
                        56
                        57     ; ;;PROGRAM;; ;
                        58
                        59     ;Clear All RAM (Set to #0)
0000 78FF               60      MOV R0,  #255
                        61      CLEAR_LOOP:
0002 7600               62      MOV @R0, #0
0004 D8FC               63      DJNZ R0, CLEAR_LOOP
                        64
                        65
                        66     ;SETUP LCD
                        67
                        68
                        69     ;SETUP Maps
                        70        ;;C
0006 C27F               71      CLR P1_P2
                        72
                        73      MAP_SETUP:
                        74        ;;Ask for Map No on Text Screen: PX: Enter Map #
                        75           ;;;Clear Text Screen
0008 753003             76      MOV MAP_NO, #3
000B 753340             77      MOV TILE_ID, #BLANK_TILE
000E 51E6               78      ACALL FILL_MAP
                        79
                        80           ;;;Display Message "PX Enter Map No"
0010 753003             81      MOV MAP_NO, #3
0013 753101             82      MOV TILE_ROW, #1
0016 753203             83      MOV TILE_COL, #3
0019 51B8               84      ACALL SELECT_TILE
001B 7730               85      MOV @R1, #CHAR_P
001D 09                 86      INC R1
001E 7701               87      MOV @R1, #CHAR_1
0020 307F02             88      JNB P1_P2, SKIP1
0023 7702               89      MOV @R1, #CHAR_2
                        90      SKIP1:
0025 753102             91      MOV TILE_ROW, #2
0028 753202             92      MOV TILE_COL, #2
002B 51B8               93      ACALL SELECT_TILE
002D 7725               94      MOV @R1, #CHAR_E
002F 09                 95      INC R1
0030 772E               96      MOV @R1, #CHAR_N
0032 09                 97      INC R1
0033 7734               98      MOV @R1, #CHAR_T
0035 09                 99      INC R1
0036 7725              100      MOV @R1, #CHAR_E
0038 09                101      INC R1
0039 7732              102      MOV @R1, #CHAR_R
003B 753103            103      MOV TILE_ROW, #3
003E 753201            104      MOV TILE_COL, #1
0041 51B8              105      ACALL SELECT_TILE
0043 772D              106      MOV @R1, #CHAR_M
0045 09                107      INC R1
0046 7721              108      MOV @R1, #CHAR_A
0048 09                109      INC R1
0049 7730              110      MOV @R1, #CHAR_P
004B 09                111      INC R1
004C 770A              112      MOV @R1, #CHAR_SPACE
004E 09                113      INC R1
004F 772E              114      MOV @R1, #CHAR_N
0051 09                115      INC R1
0052 772F              116      MOV @R1, #CHAR_O
0054 753105            117      MOV TILE_ROW, #5
0057 753203            118      MOV TILE_COL, #3
005A 51B8              119      ACALL SELECT_TILE
005C 770E              120      MOV @R1, #CHAR_UNDERSCORE
005E 09                121      INC R1
005F 770E              122      MOV @R1, #CHAR_UNDERSCORE
                       123
0061 715C              124      ACALL UPDATE_LCD_ALL
                       125
                       126        ;;Receive Map Number
                       127           ;;;Digit 1
                       128      ENTER1:
0063 715E              129      ACALL KEYBOARD
0065 B44602            130      CJNE A, #'F', SKIP00;F key is 0 key
0068 7430              131      MOV A, #'0'
                       132      SKIP00:
006A C3                133      CLR C
006B 9430              134      SUBB A, #30H
006D C3                135      CLR C
006E B40800            136      CJNE A, #8, $+3
0071 50F0              137      JNC ENTER1
0073 F534              138      MOV INPUT_I, A
                       139
0075 F533              140      MOV TILE_ID, A  ;TILE ID = Integer value for 0-9
0077 753105            141      MOV TILE_ROW, #5
007A 753203            142      MOV TILE_COL, #3;**
007D 51B8              143      ACALL SELECT_TILE
007F A733              144      MOV @R1, TILE_ID
0081 712C              145      ACALL UPDATE_LCD_COL
                       146
                       147           ;;;Digit 2
                       148      ENTER2:
0083 715E              149      ACALL KEYBOARD
0085 B44602            150      CJNE A, #'F', SKIP01;F key is 0 key
0088 7430              151      MOV A, #'0'
                       152      SKIP01:
008A C3                153      CLR C
008B 9430              154      SUBB A, #30H
008D C3                155      CLR C
008E B40A00            156      CJNE A, #10, $+3
0091 50F0              157      JNC ENTER2
0093 F535              158      MOV INPUT_II, A
                       159
                       160
0095 F533              161      MOV TILE_ID, A  ;TILE ID = Integer value for 0-9
0097 753105            162      MOV TILE_ROW, #5
009A 753204            163      MOV TILE_COL, #4
009D 51B8              164      ACALL SELECT_TILE
009F A733              165      MOV @R1, TILE_ID
00A1 712C              166      ACALL UPDATE_LCD_COL
                       167
                       168        ;;Fetch Map
00A3 750713            169      MOV CTR_I, #19
00A6 79C0              170      MOV R1, #TEXT_SCR_MAP_START
                       171
00A8 85343C            172      MOV EEPROM_PAGE_NO, INPUT_I
00AB E535              173      MOV A, INPUT_II
00AD 75F013            174      MOV B, #19
00B0 A4                175      MUL AB
00B1 F53A              176      MOV MEMORY_ADDRESS1, A
                       177
                       178      READ_LOOP:
00B3 C001              179      PUSH 01
00B5 9104              180      ACALL READ_DATA
00B7 D001              181      POP  01
00B9 A73D              182      MOV @R1, EEPROM_BUFF
00BB 09                183      INC R1
00BC 053A              184      INC MEMORY_ADDRESS1
00BE D507F2            185      DJNZ CTR_I, READ_LOOP
                       186
                       187
                       188        ;;Decode and Load Map
                       189
                       190           ;;;Initialize map with blank tiles
00C1 753340            191      MOV TILE_ID, #BLANK_TILE
00C4 753001            192      MOV MAP_NO, #1
00C7 307F03            193      JNB P1_P2, SKIP2
00CA 753002            194      MOV MAP_NO, #2
                       195      SKIP2:
00CD 51E6              196      ACALL FILL_MAP
                       197
                       198           ;;;Load Legend
00CF 7940              199      MOV R1, #P1_MAP_START ; Row 0
00D1 307F02            200      JNB P1_P2, SKIP3
00D4 7980              201      MOV R1, #P2_MAP_START
                       202      SKIP3:
00D6 09                203      INC R1
00D7 7701              204      MOV @R1, #CHAR_1
00D9 09                205      INC R1
00DA 7702              206      MOV @R1, #CHAR_2
00DC 09                207      INC R1
00DD 7703              208      MOV @R1, #CHAR_3
00DF 09                209      INC R1
00E0 7704              210      MOV @R1, #CHAR_4
00E2 09                211      INC R1
00E3 7705              212      MOV @R1, #CHAR_5
00E5 09                213      INC R1
00E6 7706              214      MOV @R1, #CHAR_6
00E8 09                215      INC R1
00E9 7707              216      MOV @R1, #CHAR_7
                       217
00EB 7940              218      MOV R1, #P1_MAP_START ; Row 0
00ED 307F02            219      JNB P1_P2, SKIP4
00F0 7980              220      MOV R1, #P2_MAP_START
                       221      SKIP4:
00F2 E9                222      MOV A, R1
00F3 2408              223      ADD A, #8
00F5 F9                224      MOV R1, A
00F6 7721              225      MOV @R1, #CHAR_A
00F8 2408              226      ADD A, #8
00FA F9                227      MOV R1, A
00FB 7722              228      MOV @R1, #CHAR_B
00FD 2408              229      ADD A, #8
00FF F9                230      MOV R1, A
0100 7723              231      MOV @R1, #CHAR_C
0102 2408              232      ADD A, #8
0104 F9                233      MOV R1, A
0105 7724              234      MOV @R1, #CHAR_D
0107 2408              235      ADD A, #8
0109 F9                236      MOV R1, A
010A 7725              237      MOV @R1, #CHAR_E
010C 2408              238      ADD A, #8
010E F9                239      MOV R1, A
010F 7726              240      MOV @R1, #CHAR_F
0111 2408              241      ADD A, #8
0113 F9                242      MOV R1, A
0114 7727              243      MOV @R1, #CHAR_G
                       244
                       245           ;;;Load Ships
                       246             ;Format: R0 reads the map code,
                       247             ;TILE_ROW Keeps row count
                       248             ;TILE_COL Keeps col count
0116 76C0              249      MOV @R0, #TEXT_SCR_MAP_START
                       250
                       251             ;Encoding is such that if the MSB is 1, the byte maps the blank tiles
                       252             ; in its respectively numbered row. IF the MSB is 0, the byte contains
                       253             ; the ID of the tile with the order respective to its row mapping byte.
0118 753100            254      MOV TILE_ROW, #0
011B 753201            255      MOV TILE_COL, #1
                       256
                       257      NEXT_MAP_CODE_BYTE:
011E E6                258      MOV A, @R0
011F C3                259      CLR C
0120 33                260      RLC A  ;MSB is checked
0121 4003              261      JC A_IS_ROW_MAPPER
                       262      A_IS_TILE_ID:
0123 08                263      INC R0
0124 80F8              264      SJMP NEXT_MAP_CODE_BYTE
                       265
                       266      A_IS_ROW_MAPPER:
0126 0531              267      INC TILE_ROW
0128 753200            268      MOV TILE_COL, #0
012B 33                269      RLC A; ;Checking bit 6
012C 0532              270      INC TILE_COL ;Column 1
012E 5002              271      JNC COL2
0130 3163              272      ACALL LOAD_TILE; If the bit is 1, a tile needs to be loaded
                       273      COL2:
0132 33                274      RLC A; ;Checking bit 5
0133 0532              275      INC TILE_COL
0135 5002              276      JNC COL3
0137 3163              277      ACALL LOAD_TILE
                       278      COL3:
0139 33                279      RLC A; ;Checking bit 4
013A 0532              280      INC TILE_COL
013C 5002              281      JNC COL4
013E 3163              282      ACALL LOAD_TILE
                       283      COL4:
0140 33                284      RLC A; ;Checking bit 3
0141 0532              285      INC TILE_COL
0143 5002              286      JNC COL5
0145 3163              287      ACALL LOAD_TILE
                       288      COL5:
0147 33                289      RLC A; ;Checking bit 2
0148 0532              290      INC TILE_COL
014A 5002              291      JNC COL6
014C 3163              292      ACALL LOAD_TILE
                       293      COL6:
014E 33                294      RLC A; ;Checking bit 1
014F 0532              295      INC TILE_COL
0151 5002              296      JNC COL7
0153 3163              297      ACALL LOAD_TILE
                       298      COL7:
0155 33                299      RLC A; ;Checking bit 0
0156 0532              300      INC TILE_COL
0158 5002              301      JNC END_ROW
015A 3163              302      ACALL LOAD_TILE
                       303      END_ROW:
                       304
015C E531              305      MOV A, TILE_ROW
015E B407BD            306      CJNE A, #7, NEXT_MAP_CODE_BYTE ;End of Row 7 (Row G) is end of loading
0161 800C              307      SJMP MAP_LOADED
                       308
                       309      LOAD_TILE:
0163 C0E0              310      PUSH ACC
0165 08                311      INC R0
0166 8633              312      MOV TILE_ID, @R0
0168 51B8              313      ACALL SELECT_TILE
016A A733              314      MOV @R1, TILE_ID
016C D0E0              315      POP ACC
016E 22                316      RET
                       317
                       318
                       319        ;;SETUP P2 MAP
                       320      MAP_LOADED:
                       321
016F B27F              322      CPL P1_P2
0171 307F03            323      JNB  P1_P2, MAP_2_LOADED
0174 020008            324      LJMP MAP_SETUP
                       325
                       326      MAP_2_LOADED:
                       327      ;Maps are complete.
                       328
                       329
                       330     ;MAIN GAME
0177 75370C            331      MOV P1_SHIPS_LEFT, #12
017A 75380C            332      MOV P2_SHIPS_LEFT, #12
                       333
017D C27F              334      CLR P1_P2; P1 will start
                       335     MAIN_GAME:
017F B27F              336      CPL P1_P2 ;
                       337        ;;Start Turn: Load Info screen "Press "9" to begin turn"
0181 753003            338      MOV MAP_NO, #3
                       339
0184 753340            340      MOV TILE_ID, #BLANK_TILE
0187 51E6              341      ACALL FILL_MAP
                       342
0189 753101            343      MOV TILE_ROW, #1
018C 753203            344      MOV TILE_COL, #3
018F 51B8              345      ACALL SELECT_TILE
0191 7730              346      MOV @R1, #CHAR_P
0193 09                347      INC R1
0194 7701              348      MOV @R1, #CHAR_1
0196 307F02            349      JNB P1_P2, SKIP77
0199 7702              350      MOV @R1, #CHAR_2
                       351      SKIP77:
019B 753102            352      MOV TILE_ROW, #2
019E 753202            353      MOV TILE_COL, #2
01A1 51B8              354      ACALL SELECT_TILE
01A3 7725              355      MOV @R1, #CHAR_E
01A5 09                356      INC R1
01A6 772E              357      MOV @R1, #CHAR_N
01A8 09                358      INC R1
01A9 7734              359      MOV @R1, #CHAR_T
01AB 09                360      INC R1
01AC 7725              361      MOV @R1, #CHAR_E
01AE 09                362      INC R1
01AF 7732              363      MOV @R1, #CHAR_R
01B1 753103            364      MOV TILE_ROW, #3
01B4 753201            365      MOV TILE_COL, #1
01B7 51B8              366      ACALL SELECT_TILE
01B9 770F              367      MOV @R1, #CHAR_SPCH_MARKS
01BB 09                368      INC R1
01BC 7709              369      MOV @R1, #CHAR_9
01BE 09                370      INC R1
01BF 770F              371      MOV @R1, #CHAR_SPCH_MARKS
01C1 09                372      INC R1
01C2 770A              373      MOV @R1, #CHAR_SPACE
01C4 09                374      INC R1
01C5 7734              375      MOV @R1, #CHAR_T
01C7 09                376      INC R1
01C8 772F              377      MOV @R1, #CHAR_O
01CA 753104            378      MOV TILE_ROW, #4
01CD 753203            379      MOV TILE_COL, #3
01D0 51B8              380      ACALL SELECT_TILE
01D2 7722              381      MOV @R1, #CHAR_B
01D4 09                382      INC R1
01D5 7725              383      MOV @R1, #CHAR_E
01D7 09                384      INC R1
01D8 7727              385      MOV @R1, #CHAR_G
01DA 09                386      INC R1
01DB 7729              387      MOV @R1, #CHAR_I
01DD 09                388      INC R1
01DE 772E              389      MOV @R1, #CHAR_N
01E0 753105            390      MOV TILE_ROW, #5
01E3 753202            391      MOV TILE_COL, #2
01E6 51B8              392      ACALL SELECT_TILE
01E8 7734              393      MOV @R1, #CHAR_T
01EA 09                394      INC R1
01EB 7735              395      MOV @R1, #CHAR_U
01ED 09                396      INC R1
01EE 7732              397      MOV @R1, #CHAR_R
01F0 09                398      INC R1
01F1 772E              399      MOV @R1, #CHAR_N
01F3 715C              400      ACALL UPDATE_LCD_ALL
                       401
                       402        ;;Receive input
                       403      ENTER3:
01F5 715E              404      ACALL KEYBOARD
01F7 B539FB            405      CJNE A, '9', ENTER3
                       406
                       407        ;;Load Player Screen
01FA 753001            408      MOV MAP_NO, #1
01FD 307F03            409      JNB P1_P2, SKIP5
0200 753002            410      MOV MAP_NO, #2
                       411      SKIP5:
0203 715C              412      ACALL UPDATE_LCD_ALL
                       413
                       414        ;;Receive Input
                       415      RECEIVE_INPUT:
0205 7534FF            416      MOV INPUT_I, #0FFH
0208 7535FF            417      MOV INPUT_II,#0FFH
                       418
                       419      ENTER4:
020B 715E              420      ACALL KEYBOARD
020D B43802            421      CJNE A, #'8', SKIP03 ;Enter 8 to clear
0210 80F3              422      SJMP RECEIVE_INPUT
                       423      SKIP03:
0212 C3                424      CLR C
0213 B44100            425      CJNE A, #'A', $+3 ;Check if Digit
0216 4004              426      JC TO_INPUT_II
0218 F534              427      MOV INPUT_I, A
021A 8002              428      SJMP INPUT_DONE_I
                       429      TO_INPUT_II:
021C F535              430      MOV INPUT_II, A
                       431      INPUT_DONE_I:
                       432
                       433      ENTER5:
021E 715E              434      ACALL KEYBOARD
0220 B43802            435      CJNE A, #'8', SKIP04 ;Enter 8 to clear
0223 80E0              436      SJMP RECEIVE_INPUT
                       437      SKIP04:
0225 C3                438      CLR C
0226 B44100            439      CJNE A, #'A', $+3 ;Check if Digit
0229 4004              440      JC TO_INPUT_II_
022B F534              441      MOV INPUT_I, A
022D 8002              442      SJMP INPUT_DONE_II
                       443      TO_INPUT_II_:
022F F535              444      MOV INPUT_II, A
                       445      INPUT_DONE_II:
                       446
0231 E534              447      MOV A, INPUT_I
0233 B4FF02            448      CJNE A, #0FFH, SKIP6
0236 80CD              449      SJMP RECEIVE_INPUT
                       450      SKIP6:
0238 E535              451      MOV A, INPUT_II
023A B4FF02            452      CJNE A, #0FFH, SKIP7
023D 80C6              453      SJMP RECEIVE_INPUT
                       454      SKIP7:
                       455
023F 715E              456      ACALL KEYBOARD ;Enter 9 to confirm
0241 B439C1            457      CJNE A, #'9', RECEIVE_INPUT
                       458      ;All inputs are considered. INPUT_I has a letter, and II has a number
                       459
                       460        ;;Update Model
0244 853532            461      MOV TILE_COL, INPUT_II
0247 E534              462      MOV A, INPUT_I
0249 C3                463      CLR C
024A 9410              464      SUBB A, #16
024C F531              465      MOV TILE_ROW, A
                       466
024E 753002            467      MOV MAP_NO, #2
0251 307F03            468      JNB P1_P2, SKIP8
0254 753001            469      MOV MAP_NO, #1
                       470      SKIP8:
0257 51B8              471      ACALL SELECT_TILE
0259 E7                472      MOV A, @R1
025A 240A              473      ADD A, #10
025C F7                474      MOV @R1, A
                       475
025D B44E02            476      CJNE A, #HIT_SEA, SKIP10
0260 8009              477      SJMP SKIP11
                       478      SKIP10:
                       479
0262 207F04            480      JB P1_P2, P1_WAS_HIT
                       481      P2_WAS_HIT:
0265 1538              482      DEC P2_SHIPS_LEFT
0267 8002              483      SJMP SKIP11
                       484      P1_WAS_HIT:
0269 1537              485      DEC P1_SHIPS_LEFT
                       486      SKIP11:
                       487
                       488        ;;Update Radar
                       489      ;MAP_NO?**
026B 712C              490      ACALL UPDATE_LCD_COL
                       491
                       492        ;;Wait for input "9" to end turn
                       493      ENTER6:
026D 715E              494      ACALL KEYBOARD
026F B439FB            495      CJNE A, #'9', ENTER6
                       496
                       497        ;;Check for Winner
0272 E537              498      MOV A, P1_SHIPS_LEFT
0274 600A              499      JZ END_P2_WIN
0276 E538              500      MOV A, P2_SHIPS_LEFT
0278 6002              501      JZ END_P1_WIN
                       502        ;;Start next turn
027A 217F              503      AJMP MAIN_GAME
                       504
                       505     ;END OF GAME
                       506
                       507      END_P1_WIN:
027C C27F              508      CLR P1_P2
027E 8004              509      SJMP ANNOUNCE
                       510
                       511      END_P2_WIN:
0280 D27F              512      SETB P1_P2
0282 8000              513      SJMP ANNOUNCE
                       514
                       515        ;;Announce winner of info screen
                       516      ANNOUNCE:
0284 753003            517      MOV MAP_NO, #3
0287 753340            518      MOV TILE_ID, #BLANK_TILE
028A 51E6              519      ACALL FILL_MAP
                       520
028C 753003            521      MOV MAP_NO, #3
028F 753101            522      MOV TILE_ROW, #1
0292 753203            523      MOV TILE_COL, #3
0295 51B8              524      ACALL SELECT_TILE
0297 7730              525      MOV @R1, #CHAR_P
0299 09                526      INC R1
029A 7701              527      MOV @R1, #CHAR_1
029C 307F02            528      JNB P1_P2, SKIP12
029F 7702              529      MOV @R1, #CHAR_2
                       530      SKIP12:
02A1 753102            531      MOV TILE_ROW, #2
02A4 753202            532      MOV TILE_COL, #2
02A7 51B8              533      ACALL SELECT_TILE
02A9 7737              534      MOV @R1, #CHAR_W
02AB 09                535      INC R1
02AC 7729              536      MOV @R1, #CHAR_I
02AE 09                537      INC R1
02AF 772E              538      MOV @R1, #CHAR_N
02B1 09                539      INC R1
02B2 7733              540      MOV @R1, #CHAR_S
                       541
02B4 715C              542      ACALL UPDATE_LCD_ALL
                       543
                       544
                       545        ;;Ask for replay?
02B6 80FE              546      SJMP $
                       547
                       548     ;=========================================================
                       549     ; ;;METHODS;; ;
                       550     ;=========================================================
                       551      SELECT_TILE: ;Moves to R1 the RAM location of the tile at the specified map, row, and col
                       552                   ;USES: R7, R6, R1, A, TILE_ROW, TILE_COL, MAP_NO
02B8 E530              553      MOV A, MAP_NO
02BA C3                554      CLR C
02BB B40200            555      CJNE A, #2, $+3
02BE 5006              556      JNC NEXT_1
02C0 7940              557      MOV R1, #P1_MAP_START
02C2 7E7F              558      MOV R6, #P1_MAP_END
02C4 800F              559      SJMP STARTED
                       560      NEXT_1:
02C6 B40300            561      CJNE A, #3, $+3
02C9 5006              562      JNC NEXT_2
02CB 7980              563      MOV R1, #P2_MAP_START
02CD 7EBF              564      MOV R6, #P2_MAP_END
02CF 8004              565      SJMP STARTED
                       566      NEXT_2:
02D1 79C0              567      MOV R1, #TEXT_SCR_MAP_START
02D3 7EFF              568      MOV R6, #TEXT_SCR_MAP_END
                       569
                       570      STARTED:
02D5 207D12            571      JB FILLER_SHORTCUT, FILLER
                       572
02D8 AF31              573      MOV R7, TILE_ROW
02DA E9                574      MOV A, R1
                       575      ADD_LOOP1:
02DB 2408              576      ADD A, #8
02DD DFFC              577      DJNZ R7, ADD_LOOP1
                       578
02DF AF32              579      MOV R7, TILE_COL
                       580      ADD_LOOP2:
02E1 04                581      INC A
02E2 DFFD              582      DJNZ R7, ADD_LOOP2
02E4 F9                583      MOV R1, A
02E5 22                584      RET
                       585
                       586     ;=========================================================
                       587      FILL_MAP:    ;Fills the selected map entirely with the tile in TILE_ID
02E6 D27D              588      SETB FILLER_SHORTCUT
02E8 80CE              589      SJMP SELECT_TILE
                       590      FILLER:
02EA C27D              591      CLR FILLER_SHORTCUT
                       592
02EC E9                593      MOV A, R1
                       594      FILL_LOOP:
02ED A733              595      MOV @R1, TILE_ID
02EF 09                596      INC R1
02F0 04                597      INC A
02F1 B506F6            598      CJNE A, 06, FILLER
02F4 A733              599      MOV @R1, TILE_ID  ;Fills final register
02F6 22                600      RET
                       601
                       602     ;=========================================================
                       603      WRITE_TILE:
02F7 7F08              604      MOV R7, #8
02F9 8008              605      SJMP GET_PIXELS
                       606
                       607      NEXT_BYTE:
02FB E4                608      CLR A
02FC 93                609      MOVC A, @A+DPTR
02FD 715D              610      ACALL SEND_BYTE
02FF A3                611      INC DPTR
0300 DFF9              612      DJNZ R7, NEXT_BYTE
                       613
0302 22                614      RET
                       615
                       616     ;=========================================================
                       617      GET_PIXELS:;(Now part of WRITE_TILE Method)
                       618                ; Moves to DPTR location first of 8 consecutive pixel bytes defining a tile
                       619                ; Uses: A, DPTR, TILE_ID
0303 E533              620      MOV A, TILE_ID
0305 30E700            621      JNB ACC.7, IS_ID
                       622      ;if not ID, do <nothing>
                       623      IS_ID:
0308 20E60D            624      JB ACC.6, PICTURE_ID
030B 20E505            625      JB ACC.5, LETTER_ID
                       626
                       627      DIGIT_SYMBOL_ID:
030E 90048C            628      MOV DPTR, #DIGITS_SYMBOLS
0311 8008              629      SJMP TBL_FOUND
                       630
                       631      LETTER_ID:
0313 90048C            632      MOV DPTR, #LETTERS
0316 8003              633      SJMP TBL_FOUND
                       634
                       635      PICTURE_ID:
0318 90048C            636      MOV DPTR, #PICTURES
                       637
                       638      TBL_FOUND:
031B 541F              639      ANL A, #1FH ;Remove first 3 bits
031D 600B              640      JZ END_OF_PROPAGATION
                       641
                       642      PROPAGATE:
031F A3                643      INC DPTR
0320 A3                644      INC DPTR
0321 A3                645      INC DPTR
0322 A3                646      INC DPTR
                       647
0323 A3                648      INC DPTR
0324 A3                649      INC DPTR
0325 A3                650      INC DPTR
0326 A3                651      INC DPTR
                       652
0327 D5E0F5            653      DJNZ ACC, PROPAGATE
                       654      END_OF_PROPAGATION:
                       655
032A 80CF              656      SJMP NEXT_BYTE
                       657
                       658     ;=========================================================
                       659      UPDATE_LCD_COL:
                       660      ;WRITES TO LCD AN ENTIRE COLUMN OF THE SELECTED MAP
                       661      ;**MAP NO, RADAR, AND CHIP SELECT NEED TO BE PREPARED BEFORE CALLING THIS METHOD
032C 753107            662      MOV TILE_ROW, #7
032F 51B8              663      ACALL SELECT_TILE; Last Tile_Col is retained
                       664
                       665      COL_LOOP:
0331 8733              666      MOV TILE_ID, @R1
0333 207E04            667      JB RADAR, RADAR_MODE
0336 51F7              668      ACALL WRITE_TILE
0338 8019              669      SJMP MOVE_TO_NEXT
                       670
                       671      RADAR_MODE:
033A E533              672      MOV A, TILE_ID
033C B44E03            673      CJNE A, #HIT_SEA, NOT_MISS
033F 753343            674      MOV TILE_ID, #RADAR_MISSED
                       675      NOT_MISS:
0342 C3                676      CLR C
0343 944E              677      SUBB A, #HIT_SEA
0345 C3                678      CLR C
0346 B40A00            679      CJNE A, #10, $+3 ;Carry is set if A has a hit ship tile ***
0349 5003              680      JNC NOT_HIT
034B 753342            681      MOV TILE_ID, #RADAR_HIT
                       682      NOT_HIT:
034E 753341            683      MOV TILE_ID, #RADAR_TGT
0351 8000              684      SJMP MOVE_TO_NEXT
                       685
                       686       ;;MOVE TO NEXT TILE
                       687      MOVE_TO_NEXT:
0353 E9                688      MOV A, R1
0354 C3                689      CLR C
0355 9408              690      SUBB A,#8
0357 F9                691      MOV R1, A
0358 D531D6            692      DJNZ TILE_ROW, COL_LOOP
                       693
035B 22                694      RET
                       695
                       696     ;=========================================================
                       697      UPDATE_LCD_ALL:
                       698     ;***
035C 22                699      RET
                       700
                       701     ;=========================================================
                       702     ;LCD Methods...
                       703     SEND_BYTE: ;** Will write code when LCD TEST CODE is tested
                       704
035D 22                705      RET
                       706
                       707     ;=========================================================
                       708      KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
035E 7580FF            709             MOV     P0, #0ffh       ;makes P0 input
                       710      K1:
0361 75A000            711             MOV     P2, #0  ;ground all rows
0364 E580              712             MOV     A, P0
0366 540F              713             ANL     A, #00001111B
0368 B40FF6            714             CJNE    A, #00001111B, K1
                       715      K2:
036B 71D7              716             ACALL   DELAY
036D E580              717             MOV     A, P0
036F 540F              718             ANL     A, #00001111B
0371 B40F02            719             CJNE    A, #00001111B, KB_OVER
0374 80F5              720             SJMP    K2
                       721      KB_OVER:
0376 71D7              722             ACALL DELAY
0378 E580              723             MOV     A, P0
037A 540F              724             ANL     A, #00001111B
037C B40F02            725             CJNE    A, #00001111B, KB_OVER1
037F 80EA              726             SJMP    K2
                       727      KB_OVER1:
0381 75A0FE            728             MOV     P2, #11111110B
0384 E580              729             MOV     A, P0
0386 540F              730             ANL     A, #00001111B
0388 B40F21            731             CJNE    A, #00001111B, ROW_0
038B 75A0FD            732             MOV     P2, #11111101B
038E E580              733             MOV     A, P0
0390 540F              734             ANL     A, #00001111B
0392 B40F1C            735             CJNE    A, #00001111B, ROW_1
0395 75A0FB            736             MOV     P2, #11111011B
0398 E580              737             MOV     A, P0
039A 540F              738             ANL     A, #00001111B
039C B40F17            739             CJNE    A, #00001111B, ROW_2
039F 75A0F7            740             MOV     P2, #11110111B
03A2 E580              741             MOV     A, P0
03A4 540F              742             ANL     A, #00001111B
03A6 B40F12            743             CJNE    A, #00001111B, ROW_3
03A9 02036B            744             LJMP    K2
                       745
                       746      ROW_0:
03AC 9003C7            747             mov     DPTR, #KCODE0
03AF 800D              748             sjmp    KB_FIND
                       749      ROW_1:
03B1 9003CB            750             mov     DPTR, #KCODE1
03B4 8008              751             sjmp    KB_FIND
                       752      ROW_2:
03B6 9003CF            753             mov     DPTR, #KCODE2
03B9 8003              754             sjmp    KB_FIND
                       755      ROW_3:
03BB 9003D3            756             mov     DPTR, #KCODE3
                       757      KB_FIND:
03BE 13                758             rrc     A
03BF 5003              759             jnc     KB_MATCH
03C1 A3                760             inc     DPTR
03C2 80FA              761             sjmp    KB_FIND
                       762      KB_MATCH:
03C4 E4                763             clr     A
03C5 93                764             movc    A, @A+DPTR; get ASCII code from the table
03C6 22                765             ret
                       766
                       767     ;ASCII look-up table
03C7 31323341          768      KCODE0:        DB      '1', '2', '3', 'A'
03CB 34353642          769      KCODE1:        DB      '4', '5', '6', 'B'
03CF 37383943          770      KCODE2:        DB      '7', '8', '9', 'C'
03D3 47464544          771      KCODE3:        DB      'G', 'F', 'E', 'D' ;***
                       772     ;=========================================================
                       773      DELAY:
03D7 C000              774             push 0
03D9 C001              775             push 1
03DB 7F01              776             mov R7,#1;50 in hardware
                       777      DELAY_OUTER_LOOP:
03DD 7E01              778             mov R6,#1;100 in hardware
03DF DEFE              779             djnz R6,$
03E1 DFFA              780             djnz R7,DELAY_OUTER_LOOP
03E3 D001              781             pop 1
03E5 D000              782             pop 0
03E7 22                783             ret
                       784
                       785     ;=========================================================
                       786     ;EEPROM METHODS
                       787     ;=========================================================
03E8 C0E0              788     write_data:     push acc ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
03EA 120428            789         call eeprom_start
03ED 74A0              790                     mov a, #0A0H
03EF 253C              791                     add a, EEPROM_PAGE_NO
03F1 120442            792                     call send_data
03F4 E53A              793                     mov a,memory_address1          ;location address
03F6 120442            794                     call send_data
03F9 E53B              795                     mov a,eeprom_data              ;data to be send
03FB 120442            796                     call send_data
03FE 120435            797                     call eeprom_stop
0401 D0E0              798                     pop acc ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0403 22                799                     ret
                       800     ;=========================================================
0404 C0E0              801     read_data:      push acc ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0406 120428            802         call eeprom_start
                       803
0409 74A0              804                     mov a, #0A0H
040B 253C              805                     add a, EEPROM_PAGE_NO
040D 120442            806                     call send_data
0410 E53A              807                     mov a,memory_address1          ;location address
0412 120442            808                     call send_data
0415 120428            809                     call eeprom_start
0418 74A1              810                     mov a, #0A1H
041A 253C              811                     add a, EEPROM_PAGE_NO
041C 120442            812                     call send_data
041F 12045E            813                     call get_data
0422 120435            814                     call eeprom_stop
0425 D0E0              815                     pop acc ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0427 22                816                     ret
                       817     ;=========================================================
0428 D2A5              818     eeprom_start:    setb eeprom_sda_pin
042A 00                819                     nop
042B D2A4              820                     setb eeprom_scl_pin
042D 00                821                     nop
042E 00                822                     nop
042F C2A5              823                     clr eeprom_sda_pin
0431 00                824                     nop
0432 C2A4              825                     clr eeprom_scl_pin
0434 22                826                     ret
                       827     ;=========================================================
0435 C2A5              828     eeprom_stop:     clr eeprom_sda_pin
0437 00                829                     nop
0438 D2A4              830                     setb eeprom_scl_pin
043A 00                831                     nop
043B 00                832                     nop
043C D2A5              833                     setb eeprom_sda_pin
043E 00                834                     nop
043F C2A4              835                     clr eeprom_scl_pin
0441 22                836                     ret
                       837     ;=========================================================
0442 C007              838     send_data:      push 7 ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0444 7F00              839         mov r7,#00h
0446 33                840     send:           rlc a
0447 92A5              841                    mov eeprom_sda_pin,c
0449 120478            842                    call clock
044C 0F                843                    inc r7
044D BF08F6            844                    cjne r7,#08,send
0450 D2A5              845                    setb eeprom_sda_pin
0452 20A5FD            846                    jb eeprom_sda_pin,$
0455 12047F            847                   call eeprom_delay
0458 120478            848                    call clock
045B D007              849                    pop 7 ;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
045D 22                850                    ret
                       851     ;=========================================================
045E C007              852     get_data:      push 7;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0460 7F00              853                    mov r7,#00h
0462 D2A5              854                    setb eeprom_sda_pin
0464 A2A5              855     get:            mov c,eeprom_sda_pin
0466 120478            856                    call clock
0469 33                857                    rlc a
046A 0F                858                    inc r7
046B BF08F6            859                    cjne r7,#08,get
046E D2A5              860                    setb eeprom_sda_pin
0470 120478            861                    call clock
0473 F53D              862                    mov EEPROM_BUFF,a
0475 D007              863                    pop 7;;;;;;;;;;;;;;;;;;;;;;;;;;   PROTECT DATA
0477 22                864                    ret
                       865     ;=========================================================
0478 D2A4              866     clock:         setb eeprom_scl_pin
047A 00                867                    nop
047B 00                868                    nop
047C C2A4              869                    clr eeprom_scl_pin
047E 22                870                    ret
                       871     ;=========================================================
047F 75330B            872     eeprom_delay:      mov 33h,#11      ;delay of 3 mili seconds
0482 7532FF            873     eeprom_delay_1:    mov 32h,#0ffh
0485 D532FD            874                        djnz 32h,$
0488 D533F7            875                        djnz 33h,eeprom_delay_1
048B 22                876                        ret
                       877
                       878     ;=========================================================
                       879     ; ;;TILE_ID_TABLE;; ;
  0000                 880     CHAR_0          EQU 00H ;000XXXXX: DIGITS & SYMBOLS
  0001                 881     CHAR_1          EQU 01H
  0002                 882     CHAR_2          EQU 02H
  0003                 883     CHAR_3          EQU 03H
  0004                 884     CHAR_4          EQU 04H
  0005                 885     CHAR_5          EQU 05H
  0006                 886     CHAR_6          EQU 06H
  0007                 887     CHAR_7          EQU 07H
  0008                 888     CHAR_8          EQU 08H
  0009                 889     CHAR_9          EQU 09H
  000A                 890     CHAR_SPACE      EQU 0AH
  000B                 891     CHAR_Q_MARK     EQU 0BH
  000C                 892     CHAR_EXCL_MARK  EQU 0CH
  000D                 893     CHAR_POUND_SIGN EQU 0DH
  000E                 894     CHAR_UNDERSCORE EQU 0EH
  000F                 895     CHAR_SPCH_MARKS EQU 0FH
                       896                             ;10H-20H are unused
  0021                 897     CHAR_A          EQU 21H ;001XXXXX: LETTERS
  0022                 898     CHAR_B          EQU 22H
  0023                 899     CHAR_C          EQU 23H
  0024                 900     CHAR_D          EQU 24H
  0025                 901     CHAR_E          EQU 25H
  0026                 902     CHAR_F          EQU 26H
  0027                 903     CHAR_G          EQU 27H
  0028                 904     CHAR_H          EQU 28H
  0029                 905     CHAR_I          EQU 29H
  002A                 906     CHAR_J          EQU 2AH
  002B                 907     CHAR_K          EQU 2BH
  002C                 908     CHAR_L          EQU 2CH
  002D                 909     CHAR_M          EQU 2DH
  002E                 910     CHAR_N          EQU 2EH
  002F                 911     CHAR_O          EQU 2FH
  0030                 912     CHAR_P          EQU 30H
  0031                 913     CHAR_Q          EQU 31H
  0032                 914     CHAR_R          EQU 32H
  0033                 915     CHAR_S          EQU 33H
  0034                 916     CHAR_T          EQU 34H
  0035                 917     CHAR_U          EQU 35H
  0036                 918     CHAR_V          EQU 36H
  0037                 919     CHAR_W          EQU 37H
  0038                 920     CHAR_X          EQU 38H
  0039                 921     CHAR_Y          EQU 39H
  003A                 922     CHAR_Z          EQU 3AH
                       923                             ;3BH-3FH are unused
  0040                 924     BLANK_TILE      EQU 40H ;010XXXXX: PICTURES
  0041                 925     RADAR_TGT       EQU 41H
  0042                 926     RADAR_HIT       EQU 42H
  0043                 927     RADAR_MISSED    EQU 43H
  0044                 928     OPEN_SEA        EQU 44H ;0 (Java MapMaker Tile ID)
  0045                 929     LONE_SHIP_TILE  EQU 45H ;1
  0046                 930     SHIP_EASTWARD   EQU 46H ;2
  0047                 931     SHIP_NORTHWARD  EQU 47H ;3
  0048                 932     SHIP_WESTWARD   EQU 48H ;4
  0049                 933     SHIP_SOUTHWARD  EQU 49H ;5
  004A                 934     SHIP_VERTICAL   EQU 4AH ;6
  004B                 935     SHIP_HORIZONTAL EQU 4BH ;7
  004C                 936     SHIP_JUNCTION   EQU 4CH ;8
  004D                 937     CORNERS_TILE_I  EQU 4DH ;
  004E                 938     HIT_SEA         EQU 4EH ; = OPEN_SEA + 10
  004F                 939     HIT_SJIP_L      EQU 4FH
  0050                 940     HIT_SHIP_E      EQU 50H
  0051                 941     HIT_SHIP_N      EQU 51H
  0052                 942     HIT_SHIP_W      EQU 52H
  0053                 943     HIT_SHIP_S      EQU 53H
  0054                 944     HIT_SHIP_V      EQU 54H
  0055                 945     HIT_SHIP_H      EQU 55H
  0056                 946     HIT_SHIP_J      EQU 56H ; = SHIP_JUNCTION +10
  0057                 947     CORNERS_TILE_II EQU 57H
  0058                 948     CHECKERED_TILE  EQU 58H ;PIXELS: 0AAH,  55H,   0AAH,  55H,   0AAH,  55H,   0AAH,  55H
                       949                             ; Other ID's until 7FH are not implemented and use no ROM.
                       950     ;  END OF TABLE  ;
                       951
                       952     ;=========================================================
                       953     ;TILE_LUT ;**Will be copied over from other file
                       954     DIGITS_SYMBOLS:
                       955     LETTERS:
                       956     PICTURES:
                       957     ;  END OF TABLE  ;
                       958     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
ADD_LOOP1. . . . . . . . . . . . . .  C  ADDR  02DBH
ADD_LOOP2. . . . . . . . . . . . . .  C  ADDR  02E1H
ANNOUNCE . . . . . . . . . . . . . .  C  ADDR  0284H
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
A_IS_ROW_MAPPER. . . . . . . . . . .  C  ADDR  0126H
A_IS_TILE_ID . . . . . . . . . . . .  C  ADDR  0123H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BLANK_TILE . . . . . . . . . . . . .  N  NUMB  0040H
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CHAR_0 . . . . . . . . . . . . . . .  N  NUMB  0000H  NOT USED
CHAR_1 . . . . . . . . . . . . . . .  N  NUMB  0001H
CHAR_2 . . . . . . . . . . . . . . .  N  NUMB  0002H
CHAR_3 . . . . . . . . . . . . . . .  N  NUMB  0003H
CHAR_4 . . . . . . . . . . . . . . .  N  NUMB  0004H
CHAR_5 . . . . . . . . . . . . . . .  N  NUMB  0005H
CHAR_6 . . . . . . . . . . . . . . .  N  NUMB  0006H
CHAR_7 . . . . . . . . . . . . . . .  N  NUMB  0007H
CHAR_8 . . . . . . . . . . . . . . .  N  NUMB  0008H  NOT USED
CHAR_9 . . . . . . . . . . . . . . .  N  NUMB  0009H
CHAR_A . . . . . . . . . . . . . . .  N  NUMB  0021H
CHAR_B . . . . . . . . . . . . . . .  N  NUMB  0022H
CHAR_C . . . . . . . . . . . . . . .  N  NUMB  0023H
CHAR_D . . . . . . . . . . . . . . .  N  NUMB  0024H
CHAR_E . . . . . . . . . . . . . . .  N  NUMB  0025H
CHAR_EXCL_MARK . . . . . . . . . . .  N  NUMB  000CH  NOT USED
CHAR_F . . . . . . . . . . . . . . .  N  NUMB  0026H
CHAR_G . . . . . . . . . . . . . . .  N  NUMB  0027H
CHAR_H . . . . . . . . . . . . . . .  N  NUMB  0028H  NOT USED
CHAR_I . . . . . . . . . . . . . . .  N  NUMB  0029H
CHAR_J . . . . . . . . . . . . . . .  N  NUMB  002AH  NOT USED
CHAR_K . . . . . . . . . . . . . . .  N  NUMB  002BH  NOT USED
CHAR_L . . . . . . . . . . . . . . .  N  NUMB  002CH  NOT USED
CHAR_M . . . . . . . . . . . . . . .  N  NUMB  002DH
CHAR_N . . . . . . . . . . . . . . .  N  NUMB  002EH
CHAR_O . . . . . . . . . . . . . . .  N  NUMB  002FH
CHAR_P . . . . . . . . . . . . . . .  N  NUMB  0030H
CHAR_POUND_SIGN. . . . . . . . . . .  N  NUMB  000DH  NOT USED
CHAR_Q . . . . . . . . . . . . . . .  N  NUMB  0031H  NOT USED
CHAR_Q_MARK. . . . . . . . . . . . .  N  NUMB  000BH  NOT USED
CHAR_R . . . . . . . . . . . . . . .  N  NUMB  0032H
CHAR_S . . . . . . . . . . . . . . .  N  NUMB  0033H
CHAR_SPACE . . . . . . . . . . . . .  N  NUMB  000AH
CHAR_SPCH_MARKS. . . . . . . . . . .  N  NUMB  000FH
CHAR_T . . . . . . . . . . . . . . .  N  NUMB  0034H
CHAR_U . . . . . . . . . . . . . . .  N  NUMB  0035H
CHAR_UNDERSCORE. . . . . . . . . . .  N  NUMB  000EH
CHAR_V . . . . . . . . . . . . . . .  N  NUMB  0036H  NOT USED
CHAR_W . . . . . . . . . . . . . . .  N  NUMB  0037H
CHAR_X . . . . . . . . . . . . . . .  N  NUMB  0038H  NOT USED
CHAR_Y . . . . . . . . . . . . . . .  N  NUMB  0039H  NOT USED
CHAR_Z . . . . . . . . . . . . . . .  N  NUMB  003AH  NOT USED
CHECKERED_TILE . . . . . . . . . . .  N  NUMB  0058H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLEAR_LOOP . . . . . . . . . . . . .  C  ADDR  0002H
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CLOCK. . . . . . . . . . . . . . . .  C  ADDR  0478H
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
COL2 . . . . . . . . . . . . . . . .  C  ADDR  0132H
COL3 . . . . . . . . . . . . . . . .  C  ADDR  0139H
COL4 . . . . . . . . . . . . . . . .  C  ADDR  0140H
COL5 . . . . . . . . . . . . . . . .  C  ADDR  0147H
COL6 . . . . . . . . . . . . . . . .  C  ADDR  014EH
COL7 . . . . . . . . . . . . . . . .  C  ADDR  0155H
COL_LOOP . . . . . . . . . . . . . .  C  ADDR  0331H
CORNERS_TILE_I . . . . . . . . . . .  N  NUMB  004DH  NOT USED
CORNERS_TILE_II. . . . . . . . . . .  N  NUMB  0057H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CTR_I. . . . . . . . . . . . . . . .  N  NUMB  0007H
CTR_II . . . . . . . . . . . . . . .  N  NUMB  0006H  NOT USED
CTR_III. . . . . . . . . . . . . . .  N  NUMB  0005H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DELAY. . . . . . . . . . . . . . . .  C  ADDR  03D7H
DELAY_OUTER_LOOP . . . . . . . . . .  C  ADDR  03DDH
DIGITS_SYMBOLS . . . . . . . . . . .  C  ADDR  048CH
DIGIT_SYMBOL_ID. . . . . . . . . . .  C  ADDR  030EH  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
EEPROM_BUFF. . . . . . . . . . . . .  N  NUMB  003DH
EEPROM_DATA. . . . . . . . . . . . .  N  NUMB  003BH
EEPROM_DELAY . . . . . . . . . . . .  C  ADDR  047FH
EEPROM_DELAY_1 . . . . . . . . . . .  C  ADDR  0482H
EEPROM_PAGE_NO . . . . . . . . . . .  N  NUMB  003CH
EEPROM_SCL_PIN . . . . . . . . . . .  N  NUMB  00A4H
EEPROM_SDA_PIN . . . . . . . . . . .  N  NUMB  00A5H
EEPROM_START . . . . . . . . . . . .  C  ADDR  0428H
EEPROM_STOP. . . . . . . . . . . . .  C  ADDR  0435H
END_OF_PROPAGATION . . . . . . . . .  C  ADDR  032AH
END_P1_WIN . . . . . . . . . . . . .  C  ADDR  027CH
END_P2_WIN . . . . . . . . . . . . .  C  ADDR  0280H
END_ROW. . . . . . . . . . . . . . .  C  ADDR  015CH
ENTER1 . . . . . . . . . . . . . . .  C  ADDR  0063H
ENTER2 . . . . . . . . . . . . . . .  C  ADDR  0083H
ENTER3 . . . . . . . . . . . . . . .  C  ADDR  01F5H
ENTER4 . . . . . . . . . . . . . . .  C  ADDR  020BH  NOT USED
ENTER5 . . . . . . . . . . . . . . .  C  ADDR  021EH  NOT USED
ENTER6 . . . . . . . . . . . . . . .  C  ADDR  026DH
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
FILLER . . . . . . . . . . . . . . .  C  ADDR  02EAH
FILLER_SHORTCUT. . . . . . . . . . .  B  ADDR  007DH
FILL_LOOP. . . . . . . . . . . . . .  C  ADDR  02EDH  NOT USED
FILL_MAP . . . . . . . . . . . . . .  C  ADDR  02E6H
GET. . . . . . . . . . . . . . . . .  C  ADDR  0464H
GET_DATA . . . . . . . . . . . . . .  C  ADDR  045EH
GET_PIXELS . . . . . . . . . . . . .  C  ADDR  0303H
HIT_SEA. . . . . . . . . . . . . . .  N  NUMB  004EH
HIT_SHIP_E . . . . . . . . . . . . .  N  NUMB  0050H  NOT USED
HIT_SHIP_H . . . . . . . . . . . . .  N  NUMB  0055H  NOT USED
HIT_SHIP_J . . . . . . . . . . . . .  N  NUMB  0056H  NOT USED
HIT_SHIP_N . . . . . . . . . . . . .  N  NUMB  0051H  NOT USED
HIT_SHIP_S . . . . . . . . . . . . .  N  NUMB  0053H  NOT USED
HIT_SHIP_V . . . . . . . . . . . . .  N  NUMB  0054H  NOT USED
HIT_SHIP_W . . . . . . . . . . . . .  N  NUMB  0052H  NOT USED
HIT_SJIP_L . . . . . . . . . . . . .  N  NUMB  004FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INPUT_DONE_I . . . . . . . . . . . .  C  ADDR  021EH
INPUT_DONE_II. . . . . . . . . . . .  C  ADDR  0231H
INPUT_I. . . . . . . . . . . . . . .  N  NUMB  0034H
INPUT_II . . . . . . . . . . . . . .  N  NUMB  0035H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IS_ID. . . . . . . . . . . . . . . .  C  ADDR  0308H
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
K1 . . . . . . . . . . . . . . . . .  C  ADDR  0361H
K2 . . . . . . . . . . . . . . . . .  C  ADDR  036BH
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
KB_FIND. . . . . . . . . . . . . . .  C  ADDR  03BEH
KB_MATCH . . . . . . . . . . . . . .  C  ADDR  03C4H
KB_OVER. . . . . . . . . . . . . . .  C  ADDR  0376H
KB_OVER1 . . . . . . . . . . . . . .  C  ADDR  0381H
KCODE0 . . . . . . . . . . . . . . .  C  ADDR  03C7H
KCODE1 . . . . . . . . . . . . . . .  C  ADDR  03CBH
KCODE2 . . . . . . . . . . . . . . .  C  ADDR  03CFH
KCODE3 . . . . . . . . . . . . . . .  C  ADDR  03D3H
KEYBOARD . . . . . . . . . . . . . .  C  ADDR  035EH
LCD_COUNTER. . . . . . . . . . . . .  N  NUMB  0039H  NOT USED
LETTERS. . . . . . . . . . . . . . .  C  ADDR  048CH
LETTER_ID. . . . . . . . . . . . . .  C  ADDR  0313H
LOAD_TILE. . . . . . . . . . . . . .  C  ADDR  0163H
LONE_SHIP_TILE . . . . . . . . . . .  N  NUMB  0045H  NOT USED
MAIN_GAME. . . . . . . . . . . . . .  C  ADDR  017FH
MAP_2_LOADED . . . . . . . . . . . .  C  ADDR  0177H
MAP_LOADED . . . . . . . . . . . . .  C  ADDR  016FH
MAP_NO . . . . . . . . . . . . . . .  N  NUMB  0030H
MAP_SETUP. . . . . . . . . . . . . .  C  ADDR  0008H
MEMORY_ADDRESS1. . . . . . . . . . .  N  NUMB  003AH
MOVE_TO_NEXT . . . . . . . . . . . .  C  ADDR  0353H
NEXT_1 . . . . . . . . . . . . . . .  C  ADDR  02C6H
NEXT_2 . . . . . . . . . . . . . . .  C  ADDR  02D1H
NEXT_BYTE. . . . . . . . . . . . . .  C  ADDR  02FBH
NEXT_MAP_CODE_BYTE . . . . . . . . .  C  ADDR  011EH
NOT_HIT. . . . . . . . . . . . . . .  C  ADDR  034EH
NOT_MISS . . . . . . . . . . . . . .  C  ADDR  0342H
OPEN_SEA . . . . . . . . . . . . . .  N  NUMB  0044H  NOT USED
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P1_MAP_END . . . . . . . . . . . . .  N  NUMB  007FH
P1_MAP_START . . . . . . . . . . . .  N  NUMB  0040H
P1_P2. . . . . . . . . . . . . . . .  B  ADDR  007FH
P1_SHIPS_LEFT. . . . . . . . . . . .  N  NUMB  0037H
P1_WAS_HIT . . . . . . . . . . . . .  C  ADDR  0269H
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P2_MAP_END . . . . . . . . . . . . .  N  NUMB  00BFH
P2_MAP_START . . . . . . . . . . . .  N  NUMB  0080H
P2_SHIPS_LEFT. . . . . . . . . . . .  N  NUMB  0038H
P2_WAS_HIT . . . . . . . . . . . . .  C  ADDR  0265H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PICTURES . . . . . . . . . . . . . .  C  ADDR  048CH
PICTURE_ID . . . . . . . . . . . . .  C  ADDR  0318H
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PROPAGATE. . . . . . . . . . . . . .  C  ADDR  031FH
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RADAR. . . . . . . . . . . . . . . .  B  ADDR  007EH
RADAR_HIT. . . . . . . . . . . . . .  N  NUMB  0042H
RADAR_MISSED . . . . . . . . . . . .  N  NUMB  0043H
RADAR_MODE . . . . . . . . . . . . .  C  ADDR  033AH
RADAR_TGT. . . . . . . . . . . . . .  N  NUMB  0041H
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
READ_DATA. . . . . . . . . . . . . .  C  ADDR  0404H
READ_LOOP. . . . . . . . . . . . . .  C  ADDR  00B3H
RECEIVE_INPUT. . . . . . . . . . . .  C  ADDR  0205H
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
ROW_0. . . . . . . . . . . . . . . .  C  ADDR  03ACH
ROW_1. . . . . . . . . . . . . . . .  C  ADDR  03B1H
ROW_2. . . . . . . . . . . . . . . .  C  ADDR  03B6H
ROW_3. . . . . . . . . . . . . . . .  C  ADDR  03BBH
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SELECT_TILE. . . . . . . . . . . . .  C  ADDR  02B8H
SEND . . . . . . . . . . . . . . . .  C  ADDR  0446H
SEND_BYTE. . . . . . . . . . . . . .  C  ADDR  035DH
SEND_DATA. . . . . . . . . . . . . .  C  ADDR  0442H
SHIP_EASTWARD. . . . . . . . . . . .  N  NUMB  0046H  NOT USED
SHIP_HORIZONTAL. . . . . . . . . . .  N  NUMB  004BH  NOT USED
SHIP_JUNCTION. . . . . . . . . . . .  N  NUMB  004CH  NOT USED
SHIP_NORTHWARD . . . . . . . . . . .  N  NUMB  0047H  NOT USED
SHIP_SOUTHWARD . . . . . . . . . . .  N  NUMB  0049H  NOT USED
SHIP_VERTICAL. . . . . . . . . . . .  N  NUMB  004AH  NOT USED
SHIP_WESTWARD. . . . . . . . . . . .  N  NUMB  0048H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SKIP00 . . . . . . . . . . . . . . .  C  ADDR  006AH
SKIP01 . . . . . . . . . . . . . . .  C  ADDR  008AH
SKIP03 . . . . . . . . . . . . . . .  C  ADDR  0212H
SKIP04 . . . . . . . . . . . . . . .  C  ADDR  0225H
SKIP1. . . . . . . . . . . . . . . .  C  ADDR  0025H
SKIP10 . . . . . . . . . . . . . . .  C  ADDR  0262H
SKIP11 . . . . . . . . . . . . . . .  C  ADDR  026BH
SKIP12 . . . . . . . . . . . . . . .  C  ADDR  02A1H
SKIP2. . . . . . . . . . . . . . . .  C  ADDR  00CDH
SKIP3. . . . . . . . . . . . . . . .  C  ADDR  00D6H
SKIP4. . . . . . . . . . . . . . . .  C  ADDR  00F2H
SKIP5. . . . . . . . . . . . . . . .  C  ADDR  0203H
SKIP6. . . . . . . . . . . . . . . .  C  ADDR  0238H
SKIP7. . . . . . . . . . . . . . . .  C  ADDR  023FH
SKIP77 . . . . . . . . . . . . . . .  C  ADDR  019BH
SKIP8. . . . . . . . . . . . . . . .  C  ADDR  0257H
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
STARTED. . . . . . . . . . . . . . .  C  ADDR  02D5H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TBL_FOUND. . . . . . . . . . . . . .  C  ADDR  031BH
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TEXT_SCR_MAP_END . . . . . . . . . .  N  NUMB  00FFH
TEXT_SCR_MAP_START . . . . . . . . .  N  NUMB  00C0H
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TILE_COL . . . . . . . . . . . . . .  N  NUMB  0032H
TILE_ID. . . . . . . . . . . . . . .  N  NUMB  0033H
TILE_ROW . . . . . . . . . . . . . .  N  NUMB  0031H
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TO_INPUT_II. . . . . . . . . . . . .  C  ADDR  021CH
TO_INPUT_II_ . . . . . . . . . . . .  C  ADDR  022FH
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
UPDATE_LCD_ALL . . . . . . . . . . .  C  ADDR  035CH
UPDATE_LCD_COL . . . . . . . . . . .  C  ADDR  032CH
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED
WRITE_DATA . . . . . . . . . . . . .  C  ADDR  03E8H  NOT USED
WRITE_TILE . . . . . . . . . . . . .  C  ADDR  02F7H